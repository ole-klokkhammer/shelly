esphome:
  name: dimmer
  platform: ESP8266
  board: esp01_1m
  comment: Shelly Dimmer 2

substitutions:
  device_name: "Dimmer"
  max_power: "220.0" # watt
  max_temp: "70.0" # 째C

# Enable logging
logger:
  baud_rate: 0

uart:
  tx_pin: 1
  rx_pin: 3
  baud_rate: 115200

# Enable Home Assistant API
api:
  password: !secret ha_api_pass

ota:
  password: !secret ota_password

wifi:
  networks:
    - ssid: !secret wifi_ssid1
      password: !secret wifi_pass1

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${device_name} Fallback Hotspot"
    password: !secret ap_pass

text_sensor:
  - platform: wifi_info
    ip_address:
      name: "${device_name} IP Adres"
    ssid:
      name: "${device_name} SSID"
    bssid:
      name: "${device_name} BSSID"

  - platform: version
    name: "${device_name} ESPHome Version"

captive_portal:

# Enable Web Server
web_server:
  port: 80
  auth:
    username: !secret web_user
    password: !secret web_pass

time:
  - platform: homeassistant
    id: homeassistant_time

sensor:
  # NTC Temperature
  - platform: ntc
    sensor: temp_resistance_reading
    name: ${device_name} temperature
    unit_of_measurement: "째C"
    accuracy_decimals: 1
    icon: "mdi:thermometer"
    calibration:
      b_constant: 3350
      reference_resistance: 10kOhm
      reference_temperature: 298.15K
    on_value_range:
      - above: ${max_temp}
        then:
          - logger.log: "Switch turned off because temperature exceeded ${max_temp}째C"
          - homeassistant.service:
              service: persistent_notification.create
              data:
                title: Message from ${device_name}
              data_template:
                message: Switch turned off because temperature exceeded ${max_temp}째C
  - platform: resistance
    id: temp_resistance_reading
    sensor: temp_analog_reading
    configuration: DOWNSTREAM
    resistor: 32kOhm
  - platform: adc
    id: temp_analog_reading
    pin: A0

  - platform: total_daily_energy
    name: "${device_name} Energy"
    power_id: power_dimmer
    filters:
      # Multiplication factor from W to kW is 0.001
      - multiply: 0.001
    unit_of_measurement: kWh

switch:
  - platform: restart
    name: "${device_name} Herstart"

light:
  - platform: shelly_dimmer
    name: "${device_name}"
    id: dimmer
    icon: mdi:globe-light-outline
    power:
      name: "${device_name} Power"
      id: power_dimmer
    voltage:
      name: "${device_name} Voltage"
    current:
      name: "${device_name} Current"
    min_brightness: 460
    max_brightness: 1000
    firmware:
      version: "51.6"
      update: true

binary_sensor:
  - platform: gpio
    name: 'Switch 1'
    id: switchID_1
    pin:
      number: GPIO14
      mode: INPUT
    internal: true
    filters:
      - delayed_on_off: 50ms
    on_multi_click:

      # single click
      - timing:
          - ON for at most 1s
          - OFF for at least 0.5s
        then:
          - logger.log: "Single-Clicked"
          - light.toggle: dimmer

      # double click
      - timing:
          - ON for at most 0.5s
          - OFF for at most 0.5s
          - ON for at most 0.5s
          - OFF for at least 0.2s
        then:
          - logger.log: "Double-Clicked"
          - light.turn_on:
              id: dimmer
              brightness: 100%

      # triple click
      - timing:
          - ON for at most 0.5s
          - OFF for at most 0.5s
          - ON for at most 0.5s
          - OFF for at most 0.5s
          - ON for at most 0.5s
          - OFF for at least 0.2s
        then:
          - logger.log: "Triple-Clicked"
          - light.turn_on:
              id: dimmer
              brightness: 25%

      # Press and Hold button
      - timing:
          - ON for at most 0.5s
          - OFF for at least 0.1s
          - ON for at least 1s
        then:
          - logger.log: "Press and Hold - Dim DOWN"
          - while:
              condition:
                - binary_sensor.is_on: switchID_1
              then:
                - light.dim_relative:
                    id: dimmer
                    relative_brightness: -1%
                    transition_length: 0.01s
                - delay: 0.01s

      # Hold button
      - timing:
          - ON for at least 1s
        then:
          - logger.log: "Hold - Dim UP"
          - while:
              condition:
                - binary_sensor.is_on: switchID_1
              then:
                - light.dim_relative:
                    id: dimmer
                    relative_brightness: +1%
                    transition_length: 0.01s
                - delay: 0.01s
